<UserControl x:Class="Agent_s_App.View.HomePageViews.ReservationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Agent_s_App.View.HomePageViews"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="White">
    <UserControl.Resources>
        <Style x:Key="FormTextBox" TargetType="TextBox">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="SelectionBrush" Value="#FF0065B4" />
            <Setter Property="BorderThickness" Value="0,0,0,3" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
        <Style x:Key="FormLabel" TargetType="Label">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style x:Key="FormButton" TargetType="Button">
            <Setter Property="Background" Value="#ABADB3" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Opacity="0" Height="16" HorizontalAlignment="Stretch" Width="16" VerticalAlignment="Stretch"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="125*"/>
            <ColumnDefinition Width="25*"/>
            <ColumnDefinition Width="125*"/>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="125*"/>
            <ColumnDefinition Width="25*"/>
            <ColumnDefinition Width="125*"/>
            <ColumnDefinition Width="30*"/>
        </Grid.ColumnDefinitions>
        <Label Content="Guest*" Grid.Column="1"  Grid.Row="1" Style="{StaticResource FormLabel}"/>
        <Label Content="Unit*" Grid.Column="1"  Grid.Row="3" Style="{StaticResource FormLabel}"/>
        <Label Content="From Date*" Grid.Column="1"  Grid.Row="5" Style="{StaticResource FormLabel}"/>
        <Label Content="To Date*" Grid.Column="1"  Grid.Row="7" Style="{StaticResource FormLabel}"/>
        <Label Content="Comment &amp; Rating" Grid.Column="5"  Grid.Row="3" Style="{StaticResource FormLabel}"/>
        <TextBox IsEnabled="False" Grid.Column="3"  Grid.Row="1" Style="{StaticResource FormTextBox}" Text="{Binding Guest.Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <DatePicker IsEnabled="{Binding EnableEdit, UpdateSourceTrigger=PropertyChanged}" SelectedDate="{Binding FromDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="3" Grid.Row="5" BorderThickness="0,0,0,3"/>
        <DatePicker IsEnabled="{Binding EnableEdit, UpdateSourceTrigger=PropertyChanged}" SelectedDate="{Binding ToDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="3" Grid.Row="7" BorderThickness="0,0,0,3"/>
        <CheckBox IsChecked="{Binding UserConfirmed}" IsEnabled="False" Content="Confirmed" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="9" FontSize="16" Style="{DynamicResource CheckBoxStyle1}"/>
        <CheckBox IsChecked="{Binding AgentConfirmed, UpdateSourceTrigger=PropertyChanged}" Content="Agent confirmed" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="11" FontSize="16" Style="{DynamicResource CheckBoxStyle1}"/>
        <ComboBox Grid.Column="3" Grid.Row="3" 
                  IsEnabled="{Binding EnableUnit}"
                  ItemsSource="{Binding Units}" 
                  SelectedItem="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="Number"
                  FontSize="16"/>
        <Button IsEnabled="{Binding EnableMessages, UpdateSourceTrigger=PropertyChanged}" Command="{Binding AddOrUpdatePeriodPriceCommand}"  Content="Messages" Grid.Column="7" Grid.Row="1" Style="{StaticResource FormButton}"/>
        <ContentControl Content="{Binding CommentRatePage}" IsEnabled="False" Grid.Column="5" Grid.Row="4" Grid.ColumnSpan="3" Grid.RowSpan="8"/>
        <Button Command="{Binding ConfirmAddOrUpdateReservationCommand}"  Content="{Binding AddOrSaveButton}" Grid.Column="5" Grid.Row="13" Style="{StaticResource FormButton}" Background="#FF13D113"/>
        <Button Command="{Binding CancelAddOrUpdateReservationCommand}"  Content="Cancel" Grid.Column="7" Grid.Row="13" Style="{StaticResource FormButton}" Background="Red"/>
    </Grid>
</UserControl>
